import { useState, useEffect } from "react";
import { orientations } from "../../utils/types"; // Screen orientation type
import './Vulnerability.css';

function Vulnerability(props) {
  const [rssItems, setRssItems] = useState([]);

  async function fetchRSS() {
    if (!props.rssUrl) {
      console.error("RSS URL puuttuu!");
      return;
    }

    try {
      const response = await fetch(props.rssUrl);
      const jsonData = await response.json();  // Oletetaan, että palvelin palauttaa JSON-muotoista dataa

      if (jsonData.rss && jsonData.rss.channel && jsonData.rss.channel.item) {
        let items = jsonData.rss.channel.item.map((item) => ({
          title: item.title || "Ei otsikkoa",
          link: item.link || "#",
          description: item.description || "Ei kuvausta",
          pubDate: item.pubDate || "Ei päivämäärää",
        }));

        // Varmistetaan, että vain 3 uusinta uutista näytetään
        items = items.slice(0, 3);

        setRssItems(items);
      } else {
        console.error("RSS-syöte ei sisällä odotettuja elementtejä");
      }
    } catch (error) {
      console.error("Virhe RSS-syötteen haussa:", error);
    }
  }

  useEffect(() => {
    fetchRSS();
  }, [props.rssUrl]); // Uudelleenhaku, jos RSS URL muuttuu

  // Valitaan oikea kuva screen-orientaation mukaan
  const url = props.orientation === orientations.portrait 
    ? props.url.portrait 
    : props.url.landscape;

  return (
    <div className="scene-container" style={{ backgroundImage: `url(${import.meta.env.VITE_API_ADDRESS + url})` }}>
      <div className="vulnerability-news">
        <h2>Haavoittuvuusuutiset</h2>
        {rssItems.length > 0 ? (
          <ul>
            {rssItems.map((item, index) => (
              <li key={index}>
                <a href={item.link} target="_blank" rel="noopener noreferrer">
                  <strong>{item.title}</strong>
                </a>
                <p>{item.description}</p>
                <p><em>{item.pubDate}</em></p>
              </li>
            ))}
          </ul>
        ) : (
          <p>Ei uutisia saatavilla.</p>
        )}
      </div>
    </div>
  );
}

export default Vulnerability;
